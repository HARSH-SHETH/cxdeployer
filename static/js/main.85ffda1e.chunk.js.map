{"version":3,"sources":["ListForm.js","TodoList.js","TodoLists.js","App.js","index.js"],"names":["ListForm","props","useState","value","setValue","onSubmit","e","console","log","target","preventDefault","type","autoFocus","onChange","placeholder","onClick","alert","duplicate","lists","forEach","l","title","newTodoLists","slice","list","rgba","unshift","setTodoLists","display","rgbstr","i","Math","floor","random","toString","TodoList","todos","setTodos","style","background","deleteList","index","todo","task","newTodos","push","required","map","key","filter","deleteTodo","TodoLists","listItems","todolists","className","App","displayForm","setDisplayForm","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAEe,SAASA,EAASC,GAAM,MAEbC,mBAAS,IAFI,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAuCrC,OACE,uBAAMC,SApCR,SAAsBC,GACpBC,QAAQC,IAAIF,EAAEG,QACdH,EAAEI,kBAkCF,UACE,uBAAOC,KAAK,OAAOC,WAAW,EAAMC,SAhCxC,SAAsBP,GACpBF,EAASE,EAAEG,OAAON,QA+B4CW,YAAY,qBACxE,wBAAQC,QA7BZ,SAAaT,GACX,GAAa,KAAVH,EACDa,MAAM,+BACH,CACH,IAAIC,GAAY,EAShB,GARAhB,EAAMiB,MAAMC,SAAQ,SAACC,GACnB,GAAGA,EAAEC,QAAUlB,EAGb,OAFAa,MAAM,yBAA2Bb,EAAQ,wBACzCc,GAAY,OAKZA,EAAU,CACZ,IAAIK,EAAerB,EAAMiB,MAAMK,QAC3BC,EAAO,CACTH,MAAOlB,EACPsB,KAAK,GAAD,OAAKA,MAEXH,EAAaI,QAAQF,GACrBvB,EAAM0B,aAAaL,GAErBrB,EAAM2B,SAAQ,KAOd,oBAKN,SAASH,IAEP,IADA,IAAII,EAAS,QACLC,EAAI,EAAGA,EAAI,EAAGA,IACpBD,GAAUE,KAAKC,MAAsB,IAAhBD,KAAKE,UAAgBC,WAAa,KAKzD,OAFAL,GAAU,OACVtB,QAAQC,IAAIqB,GACLA,ECvDM,SAASM,EAASlC,GAAO,IAAD,EACbC,mBAAS,IADI,mBAChCkC,EADgC,KACzBC,EADyB,OAEbnC,mBAAS,IAFI,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAG/BkC,EAAQ,CACZC,WAAYtC,EAAMuB,KAAKC,MAoBzB,OACE,sBAAKa,MAAOA,EAAZ,UACE,4BAAIrC,EAAMuB,KAAKH,QACf,wBAAQN,QAAS,SAACT,GAAD,OAAOL,EAAMuC,WAAWlC,EAAGL,EAAMwC,QAAlD,yBACA,uBAAMpC,SArBV,SAAsBC,GACpBA,EAAEI,iBACF,IAAIgC,EAAO,CACTC,KAAMxC,GAEJyC,EAAWR,EAAMb,QACrBqB,EAASC,KAAKH,GACdL,EAASO,GACTxC,EAAS,KAaP,UACE,uBACEO,KAAK,OACLR,MAAOA,EACPS,WAAW,EACXC,SAAU,SAACP,GAAD,OAAOF,EAASE,EAAEG,OAAON,QACnC2C,UAAQ,EACRhC,YAAY,UAEd,wBAAQH,KAAK,SAAb,oBAEF,6BAEEyB,EAAMW,KAAI,SAACL,EAAMM,GACf,OACE,+BACA,gCACE,uBAAOrC,KAAK,aACZ,mBAAG2B,MAAO,CAACV,QAAS,UAApB,SAAgCc,EAAKC,UAEvC,wBAAQ5B,QAAS,SAACT,GAAD,OA9B3B,SAAoBA,EAAG0C,GACrB,IAAIJ,EAAWR,EAAMa,QAAO,SAACP,EAAMD,GACjC,OAAOO,IAAQP,KAEjBJ,EAASO,GA0BuBM,CAAW5C,EAAG0C,IAAtC,sBALSA,WC3CN,SAASG,EAAUlD,GAGhC,IAAMmD,EAAYnD,EAAMoD,UAAUN,KAAI,SAACvB,EAAMiB,GAC3C,OAAO,cAACN,EAAD,CAAUK,WAAYvC,EAAMuC,WAAwBC,MAAOA,EAAOjB,KAAMA,GAA3BiB,MAGtD,OACE,qBAAKa,UAAU,QAAf,SACCF,I,MCiCUG,MArCf,WAAgB,IAAD,EACmBrD,mBAAS,IAD5B,mBACRmD,EADQ,KACG1B,EADH,OAEuBzB,oBAAS,GAFhC,mBAERsD,EAFQ,KAEKC,EAFL,KAoBb,OAhBAC,qBAAU,WACRnD,QAAQC,IAAI6C,KACX,CAACA,IAeF,sBAAKC,UAAU,MAAf,UACA,wBAAQvC,QAdV,SAAqBT,GACnBmD,GAAe,IAaf,kCAGED,GACA,cAACxD,EAAD,CACE4B,QAAS6B,EACTvC,MAAOmC,EACP1B,aAAcA,IAGlB,cAACwB,EAAD,CAAWX,WApBb,SAAwBlC,EAAG0C,GACzB,IAAI1B,EAAe+B,EAAUJ,QAAO,SAACzB,EAAMiB,GACzC,OAAOA,IAAUO,KAGnBrB,EAAaL,IAe0B+B,UAAWA,QCnCtDM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.85ffda1e.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport default function ListForm(props){\n  // states\n  let [value, setValue] = useState('');\n\n  function handleSubmit(e){\n    console.log(e.target);\n    e.preventDefault();\n  }\n\n  function handleChange(e){\n    setValue(e.target.value);\n  }\n\n  function add(e){\n    if(value === ''){\n      alert('Please enter list title');\n    }else{\n      let duplicate = false;\n      props.lists.forEach((l) => {\n        if(l.title === value){\n          alert('A todo list with name ' + value + ' already exists');\n          duplicate = true;\n          return;\n        }\n      });\n\n      if(!duplicate){\n        let newTodoLists = props.lists.slice();\n        let list = {\n          title: value,\n          rgba: `${rgba()}`,\n        }\n        newTodoLists.unshift(list);\n        props.setTodoLists(newTodoLists);\n      }\n      props.display(false);\n    }\n\n  }\n  return(\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" autoFocus={true} onChange={handleChange} placeholder=\"Enter list title\" />\n      <button onClick={add}>Add</button>\n    </form>\n  )\n}\n\nfunction rgba(){\n  let rgbstr = 'rgba('; \n  for(let i = 0; i < 3; i++){\n    rgbstr += Math.floor(Math.random() * 255).toString() + ', ';\n  }\n  \n  rgbstr += '0.3)';\n  console.log(rgbstr);\n  return rgbstr;\n}\n","import { useState } from 'react';\n\nexport default function TodoList(props){\n  let [todos, setTodos] = useState([]);\n  let [value, setValue] = useState('');\n  const style = {\n    background: props.list.rgba,\n  } \n\n  function handleSubmit(e){\n    e.preventDefault();\n    let todo = {\n      task: value,\n    }\n    let newTodos = todos.slice();\n    newTodos.push(todo);\n    setTodos(newTodos);\n    setValue('');\n  }\n\n  function deleteTodo(e, key){\n    let newTodos = todos.filter((todo, index) => {\n      return key !== index;\n    })\n    setTodos(newTodos);\n  }\n  return (\n    <div style={style}>\n      <p>{props.list.title}</p>\n      <button onClick={(e) => props.deleteList(e, props.index)}>delete list</button>\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          value={value}\n          autoFocus={true} \n          onChange={(e) => setValue(e.target.value)}\n          required\n          placeholder=\"Todo:\"\n        />\n        <button type=\"submit\">add</button>\n      </form>\n      <ul>\n      {\n        todos.map((todo, key) => {\n          return (\n            <li key={key}>\n            <div>\n              <input type=\"checkbox\" />\n              <p style={{display: 'inline'}}>{todo.task}</p>\n            </div>\n            <button onClick={(e) => deleteTodo(e, key)}>\n            delete\n            </button>\n            </li>\n          )\n        })\n      }\n      </ul>\n    </div>\n  )\n}\n","import TodoList from './TodoList';\n\nexport default function TodoLists(props){\n\n\n  const listItems = props.todolists.map((list, index) => {\n    return <TodoList deleteList={props.deleteList} key={index} index={index} list={list}/>\n  })\n\n  return(\n    <div className=\"lists\">\n    {listItems}\n    </div>\n  )\n}\n","import {useState, useEffect} from 'react';\n\nimport ListForm from './ListForm';\nimport TodoLists from './TodoLists';\n\nimport './App.css';\n\nfunction App() {\n  let [todolists, setTodoLists] = useState([]);\n  let [displayForm, setDisplayForm] = useState(false);\n\n  useEffect(() => {\n    console.log(todolists);\n  }, [todolists]);\n\n  function newTodoList(e){\n    setDisplayForm(true);\n  }\n\n  function deleteTodoList(e, key){\n    let newTodoLists = todolists.filter((list, index) => {\n      return index !== key;\n    })\n\n    setTodoLists(newTodoLists);\n  }\n\n  return (\n    <div className=\"App\">\n    <button onClick={newTodoList}>\n    Create New Todo List\n    </button> \n    { displayForm && \n      <ListForm \n        display={setDisplayForm} \n        lists={todolists}\n        setTodoLists={setTodoLists}\n      /> \n    }\n    <TodoLists deleteList={deleteTodoList} todolists={todolists}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}